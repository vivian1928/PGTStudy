(define (domain BLOCKS)
    (:requirements :strips :typing)
    (:types block hand - object)
    (:predicates (on ?x - block ?y - block)
        (ontable ?x - block)
        (clear ?x - block)
        (handempty ?h - hand)
        (above ?h - hand ?b - block)
        (holding ?x - block)
    )
    (:action pick-up
        :parameters (?x - block)
        :precondition (and (ontable ?x)(clear ?x)(handempty))
        :effect(and(not (ontable ?x))
            (not (clear ?x))
            (not (handempty))
            (holding ?x)
        )
    )
    (:action put-down
        :parameters (?x - block)
        :precondition (holding ?x)
        :effect(and(ontable ?x)
            (clear ?x)
            (handempty)
            (not (holding ?x))
        )
    )
    (:action stack
        :parameters (?x - block ?y - block)
        :precondition (and (holding ?x)(clear ?y))
        :effect(and(not (holding ?x))
            (on ?x ?y)
            (handempty)
            (not (clear ?y))
            (clear ?x)
        )
    )
    (:action unstack
        :parameters (?x - block ?y - block)
        :precondition (and (on ?x ?y)(clear ?x)(handempty))
        :effect(and(not (handempty))
            (not (clear ?x))
            (clear ?y)
            (not (on ?x ?y))
            (holding ?x)
        )
    )
)